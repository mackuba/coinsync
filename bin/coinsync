#!/usr/bin/env ruby

require 'bundler/setup'
require 'coinsync'

require 'fileutils'
require 'yaml'

command = ARGV[0]

case command
when nil
  puts "Usage:"
  puts "  coinsync import - import transaction logs from exchanges"
  puts "  coinsync build - build the input csv from exchange logs"
  puts "  coinsync process - generate the output csv from the input"
  puts "  coinsync run - run the complete process"

when 'build'
  FileUtils.mkdir_p 'build'

  config = CoinSync::Config.load_from_file('config.yml')
  builder = CoinSync::Builder.new(config)
  transactions = builder.build_transaction_list

  if config.convert_to_currency
    converter = CoinSync::Outputs::CurrencyConverter.new(config)
    converter.process_transactions(transactions)
  end

  output = CoinSync::Outputs::Default.new(config, 'build/input.csv')
  output.process_transactions(transactions)

when 'summary'
  config = CoinSync::Config.load_from_file('config.yml')
  builder = CoinSync::Builder.new(config)
  transactions = builder.build_transaction_list

  CoinSync::Outputs::Summary.new(config).process_transactions(transactions)

when 'fifo'
  FileUtils.mkdir_p 'build'

  config = CoinSync::Config.load_from_file('config.yml')
  builder = CoinSync::Builder.new(config)
  transactions = builder.build_transaction_list

  if config.convert_to_currency
    converter = CoinSync::Outputs::CurrencyConverter.new(config)
    converter.process_transactions(transactions)
  end

  output = CoinSync::Outputs::Fifo.new(config, 'build/output.csv')
  output.process_transactions(transactions)

else
  raise "Unknown command #{command}"

end
